<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>[[ -e /tmp/TM_db.busy ]] &amp;&amp; rm - f /tmp/TM_db.busy
cat &lt;&lt;-HTML
&lt;html&gt;
	&lt;head&gt;
	&lt;title&gt;Go to File&lt;/title&gt;
	&lt;style type="text/css"&gt; 
  .file {
    padding: 10px;
	border-bottom: 1px solid #ddd;
  }
  #result{ margin-top: 1.5em; border-top: 1px solid #ddd; }
  .mylink {
    padding-left: 1.25em;
    display: block;
    width: 75%;
    overflow: hidden;
    color: #4183C4;
    font-size: 9pt;
    cursor: pointer;
    white-space:nowrap;
  }
  .file .score_wrapper {
    float: left;
    width: 20%;
    height: 8px;
    border: 1px solid #ccc;
    padding: 1px;
    margin-top: 2px;
    background: #fff;
  }
  .in {
    border: 0px;
    font-size: 8pt;
    color: #ffffff;
    height: 6px;
  }
  .file .in_wrapper {
    float: left;
    width: 5px;
    height: 6px;
  }
  .file .score {
    background-color: #666;
    width: 1%;
    height: 100%;
  }
  .highlight {
    color: #222;
    background-color: #ffc;
  }
  #head {
    font-size: 10pt;
    color: #333;
    background: #eeeeee;
    z-index: 106;
    text-align: center;
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    padding: .5em;
	border-bottom: 1px solid #ddd;
  }
  #head input{ width: 50%; }

	&lt;/style&gt; 
	&lt;script&gt;
var myCommand = null;
var actpath = "";
var oldterm;
var fpath = "$(readlink -f `dirname '$TM_FILEPATH'`)" + "/";
var dpath = "${TM_PROJECT_DIRECTORY:-${TM_DIRECTORY:-`dirname '$TM_FILEPATH'`}}" + "/";
var rpath = fpath.replace(dpath,'');
outStr = "";
var aTimer;
var term;
var ft;
var current_file=null;
function startSearch(t) {
    term = t;
    window.clearTimeout(aTimer);
    aTimer = window.setTimeout("startSearchTimed()", 1);
}
function startSearchTimed() {
    TextMate.isBusy = true;
    outStr = "";
    document.getElementById("result").innerHTML = "";
	setSelection(null);
    var cmd = "/usr/bin/ruby '$TM_BUNDLE_SUPPORT/lib/FileFinder.rb' '" + term + "'";
    myCommand = TextMate.system(cmd,
    function(task) {});
    myCommand.onreadoutput = output;
    TextMate.isBusy = false;
}
function output(str) {
    outStr += str;
    document.getElementById("result").innerHTML = outStr;
	if (current_file == null)
		changeSelect(1)
}
function setFile(path) {
    actpath = path;
}
function goto() {
    if (actpath != "") {
        myCommand = TextMate.system("mate '" + actpath + "'",
        function(task) {});
    }
}
function insertPath() {
    if (actpath != "") {
        cmd = "osascript -e 'tell app \"TextMate\" to insert \"\${1:"+actpath+"}\" as snippet true' &amp;";
        TextMate.system(cmd, null);
        TextMate.system("open 'txmt://open?'", null);
    }
}
function insertRelPath() {
    if (actpath != "") {
        relpath = actpath.replace(dpath,'');
        sp = rpath.split("/");
        rp = "";
        if(actpath.replace(/\/[^\/]*\/?$/, '')+"/" == fpath) {
            relpath = actpath.replace(fpath,'');
        } else {
            for(n=0; n&lt;(sp.length-1);n++) {rp=rp+"../";}
        }
        cmd = "osascript -e 'tell app \"TextMate\" to insert \"\${1:"+rp+relpath+"}\" as snippet true' &amp;";
        TextMate.system(cmd, null);
        TextMate.system("open 'txmt://open?'", null);
    }
}
function openFile() {
    if (actpath != "") {
        myCommand = TextMate.system("open '" + actpath + "'", function(task) {});
    }
}
function quicklook() {
    TextMate.system("qlmanage -p '" + actpath + "'", function(task) {})
}
function myClick(path) {
    wkey = event.keyCode;
    actpath = path;
    if (event.shiftKey &amp;&amp; event.altKey) insertPath();
    else if (event.shiftKey) insertRelPath();
    else if (event.altKey) openFile();
    else goto();
}

function getItemTopOffset(item) {
	var parent = item;
	var top = item.offsetTop;
	while(parent = parent.offsetParent)
		top += parent.offsetTop;
	return top;
}
function scrollToItem(item) {
	var itemPos = getItemTopOffset(item.parentNode);
	var headHeight = document.getElementById('head').offsetHeight;
	if (itemPos &lt; document.body.scrollTop + headHeight) {
		document.body.scrollTop = itemPos - headHeight - 2;
	} else if ((itemPos + item.parentNode.offsetHeight &gt;= document.body.clientHeight + document.body.scrollTop)) {
		document.body.scrollTop = itemPos;
	}
}
function setSelection(item) {
	if (item == current_file) return;
	if (current_file) {
		current_file.parentNode.parentNode.style.background = "";
		current_file.style.display = "";
		setFile('');
	}
	current_file = item;
	if (current_file) {
		current_file.parentNode.parentNode.style.background = "#f5f5f5";
		current_file.style.display = "none";
		current_file.onfocus();
		scrollToItem(current_file);
	}
}
function changeSelect(y) {
	var oItems = document.getElementById('result').getElementsByTagName("input");
	var iCurIndex = -1;
	if (current_file)
		for (var i=0; i &lt; oItems.length; i++) {
			if (oItems[i] == current_file) {
				iCurIndex = i;
				break;
			}
		};
	iCurIndex += y;
	if (iCurIndex &gt;= oItems.length) iCurIndex = 0;
	if (iCurIndex &lt; 0) iCurIndex = oItems.length - 1;
	if (iCurIndex &gt;= 0 &amp;&amp; iCurIndex &lt; oItems.length) {
		setSelection(oItems[iCurIndex]);
	}
	else {
		setSelection(null);
	};
}
document.onkeydown = function keyPress(event) {
    if (typeof event == "undefined") event = window.event;
    wkey = event.keyCode;
    if (wkey == 38 || wkey == 40 || wkey == 33 || wkey == 34) {
	  event.stopPropagation();
	  event.preventDefault();
	var iDiff = 1;
	if (wkey == 33)
		iDiff = -10;
	else if (wkey == 34)
		iDiff = 10;
	else if (wkey == 38)
		iDiff = -1;
	  changeSelect(iDiff);
    } else if (wkey == 13) {
	  event.stopPropagation();
	  event.preventDefault();
	}
}
document.onkeyup = function keyPress(event) {
    if (typeof event == "undefined") event = window.event;
    wkey = event.keyCode;
    if (wkey == 38 || wkey == 40 || wkey == 33 || wkey == 34) {
	  event.stopPropagation();
	  event.preventDefault();
    }
    if (wkey == 27) window.close();
    if (wkey == 32) quicklook();
    if (wkey == 13) {
        if (event.shiftKey &amp;&amp; event.altKey) insertPath();
        else if (event.shiftKey) insertRelPath();
        else if (event.altKey) openFile();
        else goto();
	  event.stopPropagation();
	  event.preventDefault();
    }
}
	&lt;/script&gt;
	&lt;/head&gt;
&lt;body onload='document.getElementById("search").focus();startSearchTimed();'&gt;
&lt;div id='head'&gt;
&lt;input accesskey="f" tabindex='0' id='search' type='search' incremental autosave='TMFFFSearch' results='20' size='25' placeholder='look for files' onfocus='setFile("")' onsearch='startSearch(this.value);'&gt;
&lt;/div&gt;
&lt;div id='result'&gt;

&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
HTML</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@K</string>
	<key>name</key>
	<string>Go to File</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>D058F9B3-CD75-4AF0-A257-20942B39D163</string>
</dict>
</plist>
